# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    services:
      postgres-integration:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: Initialize Database
      run: |
        export PGPASSWORD=postgres
        psql -h localhost -p 5433 -U postgres -c "DROP DATABASE IF EXISTS postgres;"
        psql -h localhost -p 5433 -U postgres -c "CREATE DATABASE postgres;"
    - run: npm run build --if-present
    - run: npm run lint
    - run: npm run test:unit
    - run: npm run test:e2e
      env:
        PGHOST: localhost
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: postgres
        PGPORT: 5433
